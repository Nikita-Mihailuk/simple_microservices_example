services:
  api_gateway:
    container_name: api_gateway
    build: ./api_gateway
    depends_on:
      - admin_service
    ports:
      - "8080:8080"
    environment:
      HTTP_PORT: 8080
      USER_SERVICE_HOST: user_service
      USER_SERVICE_PORT: 8000
      USER_SERVICE_TIMEOUT: 5s
      ADMIN_SERVICE_HOST: admin_service
      ADMIN_SERVICE_PORT: 8001
      ADMIN_SERVICE_TIMEOUT: 5s
  admin_service:
    container_name: admin_service
    build: ./admin_service
    depends_on:
      - user_service
    environment:
      GRPC_PORT: 8001
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: simple_microservices_example
      USER_SERVICE_HOST: user_service
      USER_SERVICE_PORT: 8000
      USER_SERVICE_TIMEOUT: 5s
  user_service:
    container_name: user_service
    build: ./user_service
    command: sh -c "./migrator --migrations-path=./migrations && ./user_service"
    depends_on:
      db:
        condition: service_healthy
    environment:
      GRPC_PORT: 8000
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: simple_microservices_example
  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: simple_microservices_example
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
volumes:
  db-data: